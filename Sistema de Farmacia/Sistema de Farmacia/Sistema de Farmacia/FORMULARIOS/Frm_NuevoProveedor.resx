<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RbPjVgQCAAAAAElFTkSuQmCC
</value>
  </data>
</root>